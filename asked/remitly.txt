// Write a function that takes two strings as input and returns true if the 
// two strings are substitution ciphers of each other.

// A few examples:

// Input: banana, cololo
// Output: True
// cololo is a valid substitution cipher of banana because each character in banana 
// is replaced by the *same* character in cololo for every occurrence
// b : c
// a : o
// n : l
// banana is also a valid substitution cipher of cololo
// c : b
// o : a
// l : n

// Input: banana, cololl
// Output: False
// The first and second 'a' in banana are replaced by o but the third 'a' is replaced by 
// 'l'

// You're writing a puzzle helper app in which a user can enter a word and the app
// returns a list of words that are substition ciphers of the user's word. The list
// of substitution ciphers is derived from a large list of words available to the app.
// An example:

// Word list: [banana, abdbdb, cat, mom, tot] 
// Input: cololo
// Output: [banana, abdbdb]

// Define and implement the classes/functions the app would use to get the cipher list for the user's input word.

/*
 * To execute Java, please define "static void main" on a class
 * named Solution.
 *
 * If you need more classes, simply define them inline.
 */